name: Deploy ArgoCD

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.16.2'

      - name: Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          if [ -z "${KUBECONFIG_B64}" ]; then
            echo "::error::KUBECONFIG_B64 secret is not set"
            exit 1
          fi
          echo "${KUBECONFIG_B64}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}

      - name: Verify Kubeconfig
        run: |
            kubectl cluster-info > /dev/null 2>&1 || { echo "::error::Failed to connect to Kubernetes cluster"; exit 1; }
            echo "Successfully connected to Kubernetes cluster"
            
      - name: Deploy ArgoCD
        run: |
          ./scripts/xborgctl.sh --pipeline
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          EMAIL: ${{ secrets.EMAIL }}
          CLUSTER_ISSUER_NAME: ${{ secrets.CLUSTER_ISSUER_NAME }}
          CLUSTER_ISSUER_SERVER: ${{ secrets.CLUSTER_ISSUER_SERVER }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_REPO_NAME: ${{ vars.APP_REPO_NAME }}
          APP_CHART_NAME: ${{ vars.APP_CHART_NAME }}
          APP_CHART_VERSION: ${{ vars.APP_CHART_VERSION }}
          APP_REPO_URL: ${{ vars.APP_REPO_URL }}
        continue-on-error: false

      - name: Cleanup
        if: always()
        run: |
          rm -rf $HOME/.kube/config cert-manager manifests